package com.example.material3sample.ui.theme
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

val bright_light_primary = Color(0xFFA900A9)
val bright_light_onPrimary = Color(0xFFFFFFFF)
val bright_light_primaryContainer = Color(0xFFFFD7F5)
val bright_light_onPrimaryContainer = Color(0xFF380038)
val bright_light_secondary = Color(0xFF016E00)
val bright_light_onSecondary = Color(0xFFFFFFFF)
val bright_light_secondaryContainer = Color(0xFF77FF61)
val bright_light_onSecondaryContainer = Color(0xFF002200)
val bright_light_tertiary = Color(0xFF054DE9)
val bright_light_onTertiary = Color(0xFFFFFFFF)
val bright_light_tertiaryContainer = Color(0xFFDCE1FF)
val bright_light_onTertiaryContainer = Color(0xFF001551)
val bright_light_error = Color(0xFFBA1A1A)
val bright_light_errorContainer = Color(0xFFFFDAD6)
val bright_light_onError = Color(0xFFFFFFFF)
val bright_light_onErrorContainer = Color(0xFF410002)
val bright_light_background = Color(0xFFFFFBFF)
val bright_light_onBackground = Color(0xFF030865)
val bright_light_surface = Color(0xFFFFFBFF)
val bright_light_onSurface = Color(0xFF030865)
val bright_light_surfaceVariant = Color(0xFFEEDEE7)
val bright_light_onSurfaceVariant = Color(0xFF4E444B)
val bright_light_outline = Color(0xFF80747C)
val bright_light_inverseOnSurface = Color(0xFFF1EFFF)
val bright_light_inverseSurface = Color(0xFF1E2578)
val bright_light_inversePrimary = Color(0xFFFFABF3)
val bright_light_shadow = Color(0xFF000000)
val bright_light_surfaceTint = Color(0xFFA900A9)
val bright_light_outlineVariant = Color(0xFFD1C2CB)
val bright_light_scrim = Color(0xFF000000)

val bright_dark_primary = Color(0xFFFFABF3)
val bright_dark_onPrimary = Color(0xFF5B005B)
val bright_dark_primaryContainer = Color(0xFF810081)
val bright_dark_onPrimaryContainer = Color(0xFFFFD7F5)
val bright_dark_secondary = Color(0xFF37E429)
val bright_dark_onSecondary = Color(0xFF013A00)
val bright_dark_secondaryContainer = Color(0xFF015300)
val bright_dark_onSecondaryContainer = Color(0xFF77FF61)
val bright_dark_tertiary = Color(0xFFB7C4FF)
val bright_dark_onTertiary = Color(0xFF002680)
val bright_dark_tertiaryContainer = Color(0xFF0039B4)
val bright_dark_onTertiaryContainer = Color(0xFFDCE1FF)
val bright_dark_error = Color(0xFFFFB4AB)
val bright_dark_errorContainer = Color(0xFF93000A)
val bright_dark_onError = Color(0xFF690005)
val bright_dark_onErrorContainer = Color(0xFFFFDAD6)
val bright_dark_background = Color(0xFF030865)
val bright_dark_onBackground = Color(0xFFE0E0FF)
val bright_dark_surface = Color(0xFF030865)
val bright_dark_onSurface = Color(0xFFE0E0FF)
val bright_dark_surfaceVariant = Color(0xFF4E444B)
val bright_dark_onSurfaceVariant = Color(0xFFD1C2CB)
val bright_dark_outline = Color(0xFF9A8D95)
val bright_dark_inverseOnSurface = Color(0xFF030865)
val bright_dark_inverseSurface = Color(0xFFE0E0FF)
val bright_dark_inversePrimary = Color(0xFFA900A9)
val bright_dark_shadow = Color(0xFF000000)
val bright_dark_surfaceTint = Color(0xFFFFABF3)
val bright_dark_outlineVariant = Color(0xFF4E444B)
val bright_dark_scrim = Color(0xFF000000)

val brightSeed = Color(0xFFFF00FF)
val CustomColor1 = Color(0xFF9900FF)
val light_CustomColor1 = Color(0xFF8B00E8)
val light_onCustomColor1 = Color(0xFFFFFFFF)
val light_CustomColor1Container = Color(0xFFF1DBFF)
val light_onCustomColor1Container = Color(0xFF2D0050)
val dark_CustomColor1 = Color(0xFFDEB7FF)
val dark_onCustomColor1 = Color(0xFF4A007F)
val dark_CustomColor1Container = Color(0xFF6900B2)
val dark_onCustomColor1Container = Color(0xFFF1DBFF)

internal val BrightLightColors = lightColorScheme(
    primary = bright_light_primary,
    onPrimary = bright_light_onPrimary,
    primaryContainer = bright_light_primaryContainer,
    onPrimaryContainer = bright_light_onPrimaryContainer,
    secondary = bright_light_secondary,
    onSecondary = bright_light_onSecondary,
    secondaryContainer = bright_light_secondaryContainer,
    onSecondaryContainer = bright_light_onSecondaryContainer,
    tertiary = bright_light_tertiary,
    onTertiary = bright_light_onTertiary,
    tertiaryContainer = bright_light_tertiaryContainer,
    onTertiaryContainer = bright_light_onTertiaryContainer,
    error = bright_light_error,
    errorContainer = bright_light_errorContainer,
    onError = bright_light_onError,
    onErrorContainer = bright_light_onErrorContainer,
    background = bright_light_background,
    onBackground = bright_light_onBackground,
    surface = bright_light_surface,
    onSurface = bright_light_onSurface,
    surfaceVariant = bright_light_surfaceVariant,
    onSurfaceVariant = bright_light_onSurfaceVariant,
    outline = bright_light_outline,
    inverseOnSurface = bright_light_inverseOnSurface,
    inverseSurface = bright_light_inverseSurface,
    inversePrimary = bright_light_inversePrimary,
    surfaceTint = bright_light_surfaceTint,
    outlineVariant = bright_light_outlineVariant,
    scrim = bright_light_scrim
)

internal val BrightDarkColors = darkColorScheme(
    primary = bright_dark_primary,
    onPrimary = bright_dark_onPrimary,
    primaryContainer = bright_dark_primaryContainer,
    onPrimaryContainer = bright_dark_onPrimaryContainer,
    secondary = bright_dark_secondary,
    onSecondary = bright_dark_onSecondary,
    secondaryContainer = bright_dark_secondaryContainer,
    onSecondaryContainer = bright_dark_onSecondaryContainer,
    tertiary = bright_dark_tertiary,
    onTertiary = bright_dark_onTertiary,
    tertiaryContainer = bright_dark_tertiaryContainer,
    onTertiaryContainer = bright_dark_onTertiaryContainer,
    error = bright_dark_error,
    errorContainer = bright_dark_errorContainer,
    onError = bright_dark_onError,
    onErrorContainer = bright_dark_onErrorContainer,
    background = bright_dark_background,
    onBackground = bright_dark_onBackground,
    surface = bright_dark_surface,
    onSurface = bright_dark_onSurface,
    surfaceVariant = bright_dark_surfaceVariant,
    onSurfaceVariant = bright_dark_onSurfaceVariant,
    outline = bright_dark_outline,
    inverseOnSurface = bright_dark_inverseOnSurface,
    inverseSurface = bright_dark_inverseSurface,
    inversePrimary = bright_dark_inversePrimary,
    surfaceTint = bright_dark_surfaceTint,
    outlineVariant = bright_dark_outlineVariant,
    scrim = bright_dark_scrim
)
